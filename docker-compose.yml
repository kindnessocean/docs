version: '3'

volumes:
  zookeeper-data:
    driver: local
  zookeeper-log:
    driver: local
  kafka-data:
    driver: local
  redis:
      driver: local
  elasticsearch-data:
      driver: local

services:

  postgresql:
    container_name: dapamoha_postgresql
    image: postgres:10
    #    restart: always
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=dapamoha
    ports:
      - '5432:5432'

  dapamoha_akhq:
    container_name: dapamoha_akhq
    #    restart: always
    # build:
    #   context: .
    image: tchiotludo/akhq:0.19.0
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "dapamoha_kafka:9092"
              schema-registry:
                url: "http://schema-registry:8085"
              connect:
                - name: "connect"
                  url: "http://connect:8083"

    ports:
      - 8085:8080
    depends_on:
      - dapamoha_zookeeper
      - dapamoha_kafka

  dapamoha_zookeeper:
    container_name: dapamoha_zookeeper
    #    restart: always
    image: confluentinc/cp-zookeeper
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data:Z
      - zookeeper-log:/var/lib/zookeeper/log:Z
    environment:
      ZOOKEEPER_CLIENT_PORT: '2181'
      ZOOKEEPER_ADMIN_ENABLE_SERVER: 'false'

  dapamoha_kafka:
    container_name: dapamoha_kafka
    ports:
      - 9094:9094
      - 9092:9092
    image: confluentinc/cp-kafka
    volumes:
      - kafka-data:/var/lib/kafka/data:Z
    environment:
      KAFKA_BROKER_ID: '0'
      KAFKA_ZOOKEEPER_CONNECT: 'dapamoha_zookeeper:2181'
      KAFKA_NUM_PARTITIONS: '12'
      KAFKA_COMPRESSION_TYPE: 'gzip'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: '1'
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: '1'
      #KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092


      KAFKA_LISTENERS: INTERNAL://dapamoha_kafka:9092,OUTSIDE://dapamoha_kafka:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://dapamoha_kafka:9092,OUTSIDE://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL

      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: 'false'
      KAFKA_JMX_PORT: '9091'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_AUTHORIZER_CLASS_NAME: 'kafka.security.authorizer.AclAuthorizer'
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: 'true'
    links:
      - dapamoha_zookeeper
    depends_on:
      - dapamoha_zookeeper

  dapamoha_mongo:
    image: 'bitnami/mongodb:5.0.4'
    container_name: dapamoha_mongo
    ports:
      - "27017:27017"
    environment:
      - MONGODB_USERNAME=root
      - MONGODB_PASSWORD=password
      - MONGODB_ROOT_PASSWORD=password
      - MONGODB_DATABASE=dapamoha

  dapamoha_mongo_express:
    image: mongo-express
    container_name: dapamoha_mongo_express
    ports:
      - 9000:8081
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://root:password@dapamoha_mongo:27017/dapamoha
    depends_on:
      - dapamoha_mongo

#    # Elasticsearch Docker Images: https://www.docker.elastic.co/
#  elasticsearch:
#    image: elasticsearch:8.1.2
#    container_name: elasticsearch
#    environment:
#      - xpack.security.enabled=false
#      - discovery.type=single-node
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#      nofile:
#        soft: 65536
#        hard: 65536
#    cap_add:
#      - IPC_LOCK
#    volumes:
#      - elasticsearch-data:/usr/share/elasticsearch/data
#    ports:
#      - 9200:9200
#      - 9300:9300
#
#  kibana:
#    container_name: kibana
#    image: kibana:8.1.2
#    environment:
#      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
#    ports:
#      - 5601:5601
#    depends_on:
#      - elasticsearch
#
#
#  dapamoha_redis:
#    image: redis:6.2.6
#    container_name: dapamoha_redis
#    ports:
#      - '6379:6379'
#    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
#    volumes:
#      - redis:/data

